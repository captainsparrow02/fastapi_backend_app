name: Build and Deploy

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRY: ${{secrets.ACCESS_TOKEN_EXPIRY}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: Pulling Git Repo
        uses: actions/checkout@v4
      - name: Installing python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Installing Dependencies.
        run: pip install -r requirements.txt
      - name: Installing & Running pytests
        run: |
          pip install pytest
          pytest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   environment:
  #     name: production
  #   steps:
  #     - name: Deploying to Ubuntu Server.
  #       uses: appleboy/ssh-action@v1.0.2
  #       with:
  #         host: ${{ secrets.PROD_HOST }}
  #         username: ${{ secrets.PROD_LOGIN_USERNAME }}
  #         key: ${{ secrets.PROD_LOGIN_PASSWORD }}
  #         script:
  #           echo ${{ secrets.PROD_PASSWORD }} | sudo -S sleep 1 && sudo su - ${{ secrets.PROD_USERNAME }}
  #           cd ~/app/src
  #           git pull
  #           echo ${{ secrets.PROD_PASSWORD }} | sudo -S sleep 1 && sudo systemctl restart api